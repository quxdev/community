# Generated by Django 3.2.10 on 2022-01-19 02:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Link",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dtm_created",
                    models.DateTimeField(auto_now_add=True, verbose_name="DTM Created"),
                ),
                (
                    "dtm_updated",
                    models.DateTimeField(auto_now=True, verbose_name="DTM Updated"),
                ),
                (
                    "slug",
                    models.CharField(max_length=16, unique=True, verbose_name="Slug"),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=256,
                        null=True,
                        verbose_name="Tags",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=256,
                        null=True,
                        verbose_name="Headline",
                    ),
                ),
                ("url", models.URLField(max_length=2048, verbose_name="URL")),
                (
                    "url_hash",
                    models.CharField(max_length=32, verbose_name="URL MD5 Hash"),
                ),
                (
                    "domain",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=512,
                        null=True,
                        verbose_name="Domain",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("article", "Article"),
                            ("book", "Book"),
                            ("profile", "Profile"),
                            ("website", "Website"),
                            ("Music", (("song", "Song"), ("album", "Album"))),
                            (
                                "Video",
                                (
                                    ("movie", "Movie"),
                                    ("episode", "Episode"),
                                    ("tvshow", "TV Show"),
                                    ("other", "Other"),
                                ),
                            ),
                        ],
                        default="website",
                        max_length=32,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default=None, null=True, verbose_name="Description"
                    ),
                ),
                (
                    "image",
                    models.URLField(
                        blank=True, default=None, max_length=2048, null=True
                    ),
                ),
                (
                    "short_url",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=128,
                        null=True,
                        unique=True,
                        verbose_name="Short URL",
                    ),
                ),
                (
                    "is_favorite",
                    models.BooleanField(default=False, verbose_name="Favorite"),
                ),
                ("is_shared", models.BooleanField(default=True, verbose_name="Shared")),
                ("votes", models.IntegerField(null=True)),
                ("comments", models.IntegerField(null=True)),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Link",
                "verbose_name_plural": "Links",
                "db_table": "qux_link",
                "ordering": ["-id"],
                "unique_together": {("url_hash", "creator")},
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("identifier", models.IntegerField()),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="qux_links.link"
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="qux_links.comment",
                    ),
                ),
            ],
            options={
                "db_table": "qux_link_comment",
            },
        ),
        migrations.CreateModel(
            name="Vote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dtm_created",
                    models.DateTimeField(auto_now_add=True, verbose_name="DTM Created"),
                ),
                (
                    "dtm_updated",
                    models.DateTimeField(auto_now=True, verbose_name="DTM Updated"),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="qux_links.link"
                    ),
                ),
                (
                    "voter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "qux_link_vote",
                "unique_together": {("item", "voter")},
            },
        ),
    ]
